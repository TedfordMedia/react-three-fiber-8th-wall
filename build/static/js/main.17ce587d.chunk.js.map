{"version":3,"sources":["Component/elements/PortalModal.js","Component/hooks/useScript.js","Component/hooks/use8thWallScripts.js","Component/hooks/use8thWall.js","Experience/ContextProvider/index.js","Experience/XR3F.js","Experience/FullWindowCanvas.js","Experience/index.js","Component/index.js","Experience/hooks/useContext.js","index.js"],"names":["PortalModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rootElementType","el","document","createElement","rootElement","append","removeChild","children","ReactDOM","createPortal","React","Component","defaultProps","querySelector","useScript","url","_useState","useState","_useState2","slicedToArray","isReady","setIsReady","_useState3","_useState4","script","setScript","useEffect","scr","type","src","async","addEventListener","body","use8thwallScripts","appKey","isScriptXrwebReady","concat","isScriptXrextrasReady","use8thWall","canvas","areScriptsReady","use8thWallScripts","XR8Object","setXR8Object","XRExtras","window","Loading","showLoading","onxrloaded","XR8","THREE","xrController","configure","disableWorldTracking","addCameraPipelineModules","GlTextureRenderer","pipelineModule","XrController","AlmostThere","RuntimeError","run","Context","createContext","ContextProvider","_ref","objectWithoutProperties","_React$useState","_React$useState2","ctx","setCtx","updateCtx","useCallback","newCtx","oldCtx","objectSpread","react_default","a","Provider","value","cloneElement","Experience","XR3F","name","_useThree","useThree","scene","gl","camera","tapTarget","setTapTarget","$surface","useRef","$box","domElement","id","useFrame","_ref2","clearDepth","render","_window","addCameraPipelineModule","onStart","onUpdate","onCanvasSizeChange","xrScene","_ref3","canvasWidth","canvasHeight","setSize","aspect","updateProjectionMatrix","_ref4","autoClear","antialias","renderer","updateCameraProjectionMatrix","origin","position","facing","quaternion","_ref5","processCpuResult","data","reality","intrinsics","rotation","elements","projectionMatrix","i","projectionMatrixInverse","getInverse","setRotationFromQuaternion","copy","onPointerDown","e","intersections","point","receiveShadow","ref","rotation-x","Math","PI","attach","args","opacity","castShadow","visible","userData","hello","color","FullWindowCanvas","canvas_","vsize_","orientation_","mycanvas_","canvasStyle_","width","height","margin","padding","border","display","top","left","mycanvasStyle_","bodyStyle_","fillScreenWithCanvas","uww","innerWidth","uwh","innerHeight","ww","devicePixelRatio","wh","requestAnimationFrame","ph","max","pw","min","pa","pvh","w","h","pvw","ch","cw","round","tmp","assign","style","setTimeout","scrollTo","scrollY","updateVideoSize","videoWidth","videoHeight","onDeviceOrientationChange","onVideoSizeChange","onCameraStatusChange","orientation","getElementsByTagName","appendChild","status","video","Fragment","withContext","WrappedExperience","xr8Config","cameraFeed","current","elements_PortalModal","undefined","withLauncher","onComplete","backgroundImage","context","useReactContext","Error","useContext","web","concurrent","zIndex","shadowMap","updateDefaultCamera","fov","intensity","angle","penumbra","shadow-mapSize-width","shadow-mapSize-height","Experience_XR3F","Experience_FullWindowCanvas","esm_extends","action","result","console","log","alert","ComponentWrapper","componentProps","src_Experience","asyncToGenerator","regenerator_default","mark","_callee","fetchData","wrap","_context","prev","next","fetch","sent","json","src_ComponentWrapper","stop","apply","arguments","initComponent"],"mappings":"6PAOMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IADS,IAEPQ,EAAoBR,EAApBQ,gBAFO,OAGfP,EAAKQ,GAAKC,SAASC,cAAcH,GAHlBP,mFAOSG,KAAKJ,MAArBY,YACIC,OAAOT,KAAKK,mDAIAL,KAAKJ,MAArBY,YACIE,YAAYV,KAAKK,qCAGxB,IACGM,EAAaX,KAAKJ,MAAlBe,SACR,OAAOC,IAASC,aACZF,EACAX,KAAKK,WArBSS,IAAMC,WAgChCpB,EAAYqB,aAAe,CACvBR,YAAaF,SAASW,cAAc,QACpCb,gBAAiB,OAGNT,sBCZAuB,EA9BG,SAACC,GAAQ,IAAAC,EACOC,oBAAS,GADhBC,EAAAxB,OAAAyB,EAAA,EAAAzB,CAAAsB,EAAA,GAChBI,EADgBF,EAAA,GACPG,EADOH,EAAA,GAAAI,EAEKL,mBAAS,MAFdM,EAAA7B,OAAAyB,EAAA,EAAAzB,CAAA4B,EAAA,GAEhBE,EAFgBD,EAAA,GAERE,EAFQF,EAAA,GA2BvB,OAvBAG,oBAAU,WACN,GAAIX,EAAK,CACL,IAAMY,EAAMzB,SAASC,cAAc,UACnCwB,EAAIC,KAAO,kBACXD,EAAIE,IAAMd,EACVY,EAAIG,OAAQ,EAEZH,EAAII,iBAAiB,OAAQ,WACzBV,GAAW,KAGfnB,SAAS8B,KAAK3B,OAAOsB,GACrBF,EAAUE,KAEf,CAACZ,IAGJW,oBAAU,kBAAM,WACRF,GACAtB,SAAS8B,KAAK1B,YAAYkB,KAE/B,CAACA,IAEGJ,GCZIa,EAdW,SAACC,GAAW,IAAAlB,EACJC,oBAAS,GADLC,EAAAxB,OAAAyB,EAAA,EAAAzB,CAAAsB,EAAA,GAC3BI,EAD2BF,EAAA,GAClBG,EADkBH,EAAA,GAE5BiB,EAAqBrB,EAAS,mCAAAsB,OAAoCF,IAClEG,EAAwBvB,EAAU,8CAQxC,OANAY,oBAAU,WACFS,GAAsBE,GACtBhB,GAAW,IAEhB,CAACc,EAAoBE,IAEjBjB,GCwBIkB,EAjCI,SAACJ,EAAQK,GACxB,IAAMC,EAAkBC,EAAkBP,GADLlB,EAEHC,mBAAS,MAFNC,EAAAxB,OAAAyB,EAAA,EAAAzB,CAAAsB,EAAA,GAE9B0B,EAF8BxB,EAAA,GAEnByB,EAFmBzB,EAAA,GA8BrC,OA1BAQ,oBAAU,WACN,IAAKgB,GAAaF,GAAmBD,EAAQ,KACjCK,EAAaC,OAAbD,SAERA,EAASE,QAAQC,YAAY,CACzBC,WAAY,WAAM,IACNC,EAAQJ,OAARI,IACRJ,OAAOK,MAAQA,EAEfD,EAAIE,eAAeC,UAAU,CAAEC,sBAAsB,IACrDJ,EAAIK,yBAAyB,CACzBL,EAAIM,kBAAkBC,iBACtBP,EAAIQ,aAAaD,iBACjBZ,EAASc,YAAYF,iBACrBZ,EAASE,QAAQU,iBACjBZ,EAASe,aAAaH,mBAG1BP,EAAIW,IAAI,CAAErB,WAEVI,EAAaM,QAI1B,CAACP,EAAWF,EAAiBD,IAEzBG,uBCjCEmB,EAAUC,wBAAc,MAEtB,SAASC,EAATC,GAAiD,IAAtBzD,EAAsByD,EAAtBzD,SAAaf,EAASE,OAAAuE,EAAA,EAAAvE,CAAAsE,EAAA,cAAAE,EACzCxD,IAAMO,SAAS,IAD0BkD,EAAAzE,OAAAyB,EAAA,EAAAzB,CAAAwE,EAAA,GACxDE,EADwDD,EAAA,GACnDE,EADmDF,EAAA,GAGtDG,EAAYC,sBAAY,SAACC,GAC3BH,EAAO,SAACI,GAAD,OAAA/E,OAAAgF,EAAA,EAAAhF,CAAA,GAAkB+E,EAAWD,MACrC,CAACH,IAEJ,OACCM,EAAAC,EAAAzE,cAAC0D,EAAQgB,SAAT,CAAkBC,MAAKpF,OAAAgF,EAAA,EAAAhF,CAAA,GACZ0E,EACA5E,EAFY,CAGf8E,eAEA5D,IAAMqE,aAAaxE,EAAnBb,OAAAgF,EAAA,EAAAhF,CAAA,GACM0E,EACA5E,EAFN,CAGG8E,gBChBhB,IDsB4BU,ECoFbC,EA1GF,SAAAjB,GAAyB,IAAtBkB,EAAsBlB,EAAtBkB,KAAMZ,EAAgBN,EAAhBM,UAAgBa,EACNC,cAAtBC,EAD4BF,EAC5BE,MAAOC,EADqBH,EACrBG,GAAIC,EADiBJ,EACjBI,OADiBvE,EAGFC,mBAAS,MAHPC,EAAAxB,OAAAyB,EAAA,EAAAzB,CAAAsB,EAAA,GAG7BwE,EAH6BtE,EAAA,GAGlBuE,EAHkBvE,EAAA,GAI9BwE,EAAWC,mBACXC,EAAOD,mBAEEL,EAAGO,WACXC,GAAKZ,EAEZa,YAAS,SAAAC,GAA2B,IAAxBV,EAAwBU,EAAxBV,GAAID,EAAoBW,EAApBX,MAAOE,EAAaS,EAAbT,OACrBD,EAAGW,aACHX,EAAGY,OAAOb,EAAOE,IAChB,GAbiC,IAAAY,EAebtD,OAAfI,EAf4BkD,EAe5BlD,IAf4BkD,EAevBjD,MAEbxB,oBAAU,WACRuB,EAAImD,wBAAwB,CAC1BlB,KAAM,UACNmB,UACAC,WAEAC,qBACAC,QAASA,MAMb,IAAMD,EAAqB,SAAAE,GAAmC,IAAhCC,EAAgCD,EAAhCC,YAAaC,EAAmBF,EAAnBE,aACzCrB,EAAGsB,QAAQF,EAAaC,GACxBpB,EAAOsB,OAASH,EAAcC,EAC9BpB,EAAOuB,0BAGHT,EAAU,SAAAU,GAAmC,IAAhCL,EAAgCK,EAAhCL,YAAaC,EAAmBI,EAAnBJ,aAC9BrB,EAAG0B,WAAY,EACf1B,EAAGsB,QAAQF,EAAaC,GACxBrB,EAAG2B,WAAY,EAKf3C,EAAU,CACRe,QACAE,SACA2B,SAAU5B,IAGZrC,EAAIQ,aAAa0D,6BAA6B,CAC5CC,OAAQ7B,EAAO8B,SACfC,OAAQ/B,EAAOgC,cAIbjB,EAAW,SAAAkB,GAA0B,IAAvBC,EAAuBD,EAAvBC,iBAClBlC,EAAOuB,yBAEP,IAAIY,EAAOD,EAAiBE,QAC5B,GAAMD,GAAQA,EAAKE,WAAnB,CAKA,IATyC,IAMnCA,EAAmCF,EAAnCE,WAAYP,EAAuBK,EAAvBL,SAAUQ,EAAaH,EAAbG,SACtBC,EAAavC,EAAOwC,iBAApBD,SAEGE,EAAI,EAAGA,EAAI,GAAIA,IACtBF,EAASE,GAAKJ,EAAWI,GAG3BzC,EAAO0C,wBAAwBC,WAAW3C,EAAOwC,kBACjDxC,EAAO4C,0BAA0BN,GACjCtC,EAAO8B,SAASe,KAAKf,KAGjBb,EAAU,WACd,MAAO,CAAEnB,QAAOE,SAAQ2B,SAAU5B,IAGpC,OACEX,EAAAC,EAAAzE,cAAA,aACEwE,EAAAC,EAAAzE,cAAA,QACEkI,cAAe,SAACC,GAAD,OAAO7C,EAAa6C,EAAEC,cAAc,GAAGC,QACtDC,eAAa,EACbpB,SAAU,CAAC,EAAG,EAAG,GACjBqB,IAAKhD,EACLiD,cAAaC,KAAKC,GAAK,GAEvBlE,EAAAC,EAAAzE,cAAA,iBAAe2I,OAAO,WAAWC,KAAM,CAAC,IAAK,IAAK,EAAG,KACrDpE,EAAAC,EAAAzE,cAAA,kBAAgB6I,QAAS,MAE3BrE,EAAAC,EAAAzE,cAAA,SAAOkH,SAAU,CAAC,EAAE,GAAG,IACrB1C,EAAAC,EAAAzE,cAAA,QACE8I,YAAU,EACV5B,SAAU7B,EACV0D,UAAW1D,EACXkD,IAAK9C,EACLuD,SAAU,CAAEC,MAAO,QAEnBzE,EAAAC,EAAAzE,cAAA,eAAa4I,KAAM,CAAC,EAAG,EAAG,KAC1BpE,EAAAC,EAAAzE,cAAA,wBAAsBkJ,MAAM,aC0EvBC,EA7KU,WAAM,IAWxBC,EAVCjE,EAAMF,cAANE,GADuBa,EAM1BtD,OAFAI,EAJ0BkD,EAI1BlD,IAIEuG,GARwBrD,EAK1BjD,MAGW,IACTuG,EAAe,EACfC,EAAYpE,EAAGO,WAGb8D,EAAe,CACnBtC,SAAU,SACVuC,MAAO,OACPC,OAAQ,OACRC,OAAQ,MACRC,QAAS,MACTC,OAAQ,MACRC,QAAS,QACTC,IAAK,MACLC,KAAM,OAGJC,EAAiB,CACnB/C,SAAU,QACVuC,MAAO,OACPC,OAAQ,OACRC,OAAQ,MACRC,QAAS,MACTC,OAAQ,MACRC,QAAS,QACTC,IAAK,MACLC,KAAM,OAGFE,EAAa,CACpBT,MAAO,OACPC,OAAQ,OACPC,OAAQ,MACTC,QAAS,MACTC,OAAQ,OAGHM,EAAuB,SAAvBA,IACL,GAAKf,EAAL,CAEG,IAAMgB,EAAM1H,OAAO2H,WACbC,EAAM5H,OAAO6H,YACbC,EAAKJ,EAAMK,iBACXC,EAAKJ,EAAMG,iBAGpB,IAAuB,IAAjBnB,GAAuC,MAAjBA,IAAyBkB,EAAKE,IAA0B,KAAjBpB,IAAyC,KAAlBA,IAAyBoB,EAAKF,EACtH9H,OAAOiI,sBAAsBR,OAD/B,CAMG,IAAMS,EAAKnC,KAAKoC,IAAIL,EAAIE,GAClBI,EAAKrC,KAAKsC,IAAIP,EAAIE,GAClBM,EAAKJ,EAAKE,EAEVG,EAAMxC,KAAKoC,IAAIxB,EAAO6B,EAAG7B,EAAO8B,GAChCC,EAAM3C,KAAKsC,IAAI1B,EAAO6B,EAAG7B,EAAO8B,GAGlCE,EAAKJ,EACLK,EAAK7C,KAAK8C,MAAMN,EAAMD,GAgB7B,GAbIM,EAAKF,IACRE,EAAKF,EACLC,EAAK5C,KAAK8C,MAAMH,EAAMJ,KAKnBM,EAAKR,GAAMO,EAAKT,KACnBU,EAAKR,EACLO,EAAKT,GAIFJ,EAAKE,EAAI,CACZ,IAAIc,EAAMF,EACVA,EAAKD,EACLA,EAAKG,EAINjM,OAAOkM,OAAOrC,EAAQsC,MAAOlC,GAC7BJ,EAAQK,MAAQ6B,EAChBlC,EAAQM,OAAS2B,EACjB9L,OAAOkM,OAAOlC,EAAUmC,MAAOzB,GAC/BV,EAAUE,MAAQ6B,EAClB/B,EAAUG,OAAS2B,EAMhBM,WAAW,kBAAMjJ,OAAOkJ,SAAS,GAAIlJ,OAAOmJ,QAAU,GAAK,IAAI,QAG7DC,EAAkB,SAAAjI,GAA+B,IAA7BkI,EAA6BlI,EAA7BkI,WAAYC,EAAiBnI,EAAjBmI,YACrC3C,EAAO6B,EAAIa,EACX1C,EAAO8B,EAAIa,GAGZzK,oBAAU,WACTuB,EAAImD,wBAAwB,CAC3BlB,KAAM,oBACNoB,WACAD,UACA+F,4BACA7F,qBACA8F,oBACAC,2BAIF,IAAMhG,EAAW,WACZiD,EAAQsC,MAAMjC,QAAUD,EAAaC,OAASL,EAAQsC,MAAMhC,SAAWF,EAAaE,QAIxFS,KAGKjE,EAAU,SAAAL,GAA2B,IAAzBzD,EAAyByD,EAAzBzD,OAAQgK,EAAiBvG,EAAjBuG,YAGzB9C,EAAe8C,GADfhD,EAAUhH,GAEFsJ,MAAQlC,EAChBD,EAAUmC,MAAQzB,EAClB,IAAMpI,EAAO9B,SAASsM,qBAAqB,QAAQ,GACnD9M,OAAOkM,OAAO5J,EAAK6J,MAAOxB,GAC1BrI,EAAKyK,YAAYlD,GAEjBe,KAGK+B,EAAoB,SAAA5F,GAA+B,IAA7ByF,EAA6BzF,EAA7ByF,WAAYC,EAAiB1F,EAAjB0F,YACvCF,EAAgB,CAACC,aAAYC,gBAC7B7B,KAGK/D,EAAqB,WAC1B+D,KAGK8B,EAA4B,SAAArF,GAAmB,IAAjBwF,EAAiBxF,EAAjBwF,YAEnC9C,EAAe8C,EACfjC,KAGKgC,EAAuB,SAAA9E,GAAqB,IAAnBkF,EAAmBlF,EAAnBkF,OAAQC,EAAWnF,EAAXmF,MACvB,aAAXD,GAIJT,EAAgBU,IAGjB,OACChI,EAAAC,EAAAzE,cAAAwE,EAAAC,EAAAgI,SAAA,OC3HaC,GHvBa7H,EIfrB,SAAsBA,GACzB,SAAS8H,EAAT9I,GAKG,IAJC9B,EAID8B,EAJC9B,OACA6K,EAGD/I,EAHC+I,UAEGvN,GACJwE,EAFCM,UAED5E,OAAAuE,EAAA,EAAAvE,CAAAsE,EAAA,qCAIOgJ,EAAarH,iBAAO,MAEpB1C,EAAMX,EAAWJ,EAAQ8K,EAAWC,SAE1C,OACItI,EAAAC,EAAAzE,cAAAwE,EAAAC,EAAAgI,SAAA,KACIjI,EAAAC,EAAAzE,cAAC+M,EAAD,CAAa9M,YAAaF,SAAS8B,MAC/B2C,EAAAC,EAAAzE,cAAA,UACIuI,IAAKsE,KAGZ/J,GACG0B,EAAAC,EAAAzE,cAAC6E,EAADtF,OAAAkM,OAAA,CACI3I,IAAKA,EACL8J,UAAWA,GACPvN,KAmBxB,OAJAsN,EAAkBlM,aAAe,CAC7B0D,eAAW6I,GAGR,SAAC3N,GAAD,OAAWmF,EAAAC,EAAAzE,cAAC2M,EAAsBtN,IDNlB4N,CAjCT,SAAApJ,GAAsD,IAAnDf,EAAmDe,EAAnDf,IAEbqB,GAFgEN,EAA9C+I,UAA8C/I,EAAnCqJ,WAAmCrJ,EAAvBsJ,gBEblC,WACX,IAAMC,EAAUC,qBAAgB3J,GAEhC,IAAK0J,EACD,MAAM,IAAIE,MAAM,sCAGpB,OAAOF,EFSHG,GADApJ,WAWJ,OARA5C,oBAAU,WAEFuB,GACAqB,EAAU,CAAErB,SAEjB,CAACA,EAAKqB,IAIRK,EAAAC,EAAAzE,cAACwN,EAAA,EAAD,CAAQC,YAAY,EAAM/B,MAAO,CAAEjC,MAAM,OAAQC,OAAO,OAAQxC,SAAS,WAAY8C,KAAK,MAAOD,IAAI,MAAO2D,OAAO,KAAQC,WAAS,EAACC,qBAAqB,EAAOxI,OAAQ,CAAC8B,SAAU,CAAC,EAAG,EAAG,GAAI2G,IAAK,KAC/LrJ,EAAAC,EAAAzE,cAAA,gBAAc8N,UAAW,KACzBtJ,EAAAC,EAAAzE,cAAA,aACE8N,UAAW,GACX5G,SAAU,CAAC,GAAI,GAAI,IACnB6G,MAAO,GACPC,SAAU,EACVC,uBAAsB,KACtBC,wBAAuB,KACvBpF,YAAU,IAEZtE,EAAAC,EAAAzE,cAACmO,EAAD,CAAMpJ,KAAM,WAAYZ,UAAWA,IAGnCK,EAAAC,EAAAzE,cAACoO,EAAD,SHjBN,SAAAvI,GAAwC,IAATxG,EAASE,OAAA8O,EAAA,EAAA9O,CAAA,GAAAsG,GACpC,OACIrB,EAAAC,EAAAzE,cAAC4D,EAAoBvE,EACjBmF,EAAAC,EAAAzE,cAAC6E,EAAD,SM1BVqI,EAAa,SAACoB,EAAQC,GACxBC,QAAQC,IAAI,iCACZD,QAAQC,IAAI,WAAYH,GACxBE,QAAQC,IAAI,WAAYF,GACxBG,MAAM,qBAGJC,EAAmB,SAACC,GAEtB,OAAKA,EAKDpK,EAAAC,EAAAzE,cAAC6O,EACOD,GALD,OAUI,eAAA/K,EAAAtE,OAAAuP,EAAA,EAAAvP,CAAAwP,EAAAtK,EAAAuK,KAAG,SAAAC,IAAA,IAAAC,EAAAN,EAAA,OAAAG,EAAAtK,EAAA0K,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,MAAM,eADZ,cACZL,EADYE,EAAAI,KAAAJ,EAAAE,KAAA,EAEWJ,EAAUO,OAFrB,OAEZb,EAFYQ,EAAAI,KAIlBnP,IAAS0F,OACLvB,EAAAC,EAAAzE,cAAC0P,EAADnQ,OAAAkM,OAAA,CACIyB,WAAYA,GACR0B,IAER7O,SAASW,cAAc,UATT,wBAAA0O,EAAAO,SAAAV,MAAH,yBAAApL,EAAA+L,MAAAnQ,KAAAoQ,aAAA,EAanBC","file":"static/js/main.17ce587d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\n/**\n * Render all children components in another element in the DOM\n */\nclass PortalModal extends React.Component {\n    constructor(props) {\n        super(props);\n        const { rootElementType } = props;\n        this.el = document.createElement(rootElementType);\n    }\n\n    componentDidMount() {\n        const { rootElement } = this.props;\n        rootElement.append(this.el);\n    }\n\n    componentWillUnmount() {\n        const { rootElement } = this.props;\n        rootElement.removeChild(this.el);\n    }\n\n    render() {\n        const { children } = this.props;\n        return ReactDOM.createPortal(\n            children,\n            this.el,\n        );\n    }\n}\n\nPortalModal.propTypes = {\n    rootElement: PropTypes.instanceOf(Element),\n    rootElementType: PropTypes.string,\n    children: PropTypes.node.isRequired,\n};\n\nPortalModal.defaultProps = {\n    rootElement: document.querySelector('body'),\n    rootElementType: 'div',\n};\n\nexport default PortalModal;\n","import React, { useEffect, useState } from 'react';\n\nconst useScript = (url) => {\n    const [isReady, setIsReady] = useState(false);\n    const [script, setScript] = useState(null);\n\n    useEffect(() => {\n        if (url) {\n            const scr = document.createElement('script');\n            scr.type = 'text/javascript';\n            scr.src = url;\n            scr.async = true;\n\n            scr.addEventListener('load', () => {\n                setIsReady(true);\n            });\n\n            document.body.append(scr);\n            setScript(scr);\n        }\n    }, [url]);\n\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    useEffect(() => () => {\n        if (script) {\n            document.body.removeChild(script);\n        }\n    }, [script]);\n\n    return isReady;\n};\n\nexport default useScript;\n","import { useEffect, useState } from 'react';\nimport useScript from './useScript';\n\nconst use8thwallScripts = (appKey) => {\n    const [isReady, setIsReady] = useState(false);\n    const isScriptXrwebReady = useScript(`//apps.8thwall.com/xrweb?appKey=${appKey}`);\n    const isScriptXrextrasReady = useScript('//cdn.8thwall.com/web/xrextras/xrextras.js');\n\n    useEffect(() => {\n        if (isScriptXrwebReady && isScriptXrextrasReady) {\n            setIsReady(true);\n        }\n    }, [isScriptXrwebReady, isScriptXrextrasReady]);\n\n    return isReady;\n};\n\nexport default use8thwallScripts;\n","import React, { useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport use8thWallScripts from './use8thWallScripts';\n\n\nconst use8thWall = (appKey, canvas, ) => {\n    const areScriptsReady = use8thWallScripts(appKey);\n    const [XR8Object, setXR8Object] = useState(null);\n\n    useEffect(() => {\n        if (!XR8Object && areScriptsReady && canvas) {\n            const { XRExtras } = window;\n\n            XRExtras.Loading.showLoading({\n                onxrloaded: () => {\n                    const { XR8 } = window;\n                    window.THREE = THREE;\n\n                    XR8.xrController().configure({ disableWorldTracking: false });\n                    XR8.addCameraPipelineModules([\n                        XR8.GlTextureRenderer.pipelineModule(),\n                        XR8.XrController.pipelineModule(),\n                        XRExtras.AlmostThere.pipelineModule(),\n                        XRExtras.Loading.pipelineModule(),\n                        XRExtras.RuntimeError.pipelineModule(),\n                    ]);\n\n                    XR8.run({ canvas });\n\n                    setXR8Object(XR8);\n                },\n            });\n        }\n    }, [XR8Object, areScriptsReady, canvas]);\n\n    return XR8Object;\n};\n\nexport default use8thWall;\n","import React, { createContext, useCallback } from 'react';\n\nexport const Context = createContext(null);\n\nexport default function ContextProvider ({children, ...props})  {\n\tconst [ctx, setCtx] = React.useState({});\n\n    const updateCtx = useCallback((newCtx) => {\n        setCtx((oldCtx) => ({ ...oldCtx, ...newCtx }));\n    }, [setCtx]);\n\n    return (\n\t    <Context.Provider value={{\n\t            ...ctx,\n\t            ...props,\n\t            updateCtx,            \n\t        }}>\n            {React.cloneElement(children, {\n                ...ctx,\n                ...props,\n                updateCtx,                \n            })}\n\t    </Context.Provider>\n\t);\n}\n\nexport function withContext(Experience) {\n    function WrappedExperience({...props }) {\n        return (\n            <ContextProvider {...props}>\n                <Experience />\n            </ContextProvider>\n        );\n    }\n\n    return WrappedExperience;\n}","//import * as THREE from 'three';\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Canvas, useThree, useFrame } from \"react-three-fiber\";\n\nconst XR3F = ({ name, updateCtx }) => {\n  const { scene, gl, camera } = useThree();\n\n  const [tapTarget, setTapTarget] = useState(null);\n  const $surface = useRef();\n  const $box = useRef();\n\n  const canvas = gl.domElement;\n  canvas.id = name;\n\n  useFrame(({ gl, scene, camera }) => {\n    gl.clearDepth();\n    gl.render(scene, camera);\n  }, 1);\n\n  const { XR8, THREE } = window;\n\n  useEffect(() => {\n    XR8.addCameraPipelineModule({\n      name: \"xrthree\",\n      onStart,\n      onUpdate,\n      //onRender,\n      onCanvasSizeChange,\n      xrScene: xrScene,\n    });\n\n    //window.addEventListener('touchstart', handleTouchEvent);\n  });\n\n  const onCanvasSizeChange = ({ canvasWidth, canvasHeight }) => {\n    gl.setSize(canvasWidth, canvasHeight);\n    camera.aspect = canvasWidth / canvasHeight;\n    camera.updateProjectionMatrix();\n  };\n\n  const onStart = ({ canvasWidth, canvasHeight }) => {\n    gl.autoClear = false;\n    gl.setSize(canvasWidth, canvasHeight);\n    gl.antialias = true;\n\n    // eslint-disable-next-line no-debugger\n    debugger;\n    // Update React ctx\n    updateCtx({\n      scene,\n      camera,\n      renderer: gl,\n    });\n\n    XR8.XrController.updateCameraProjectionMatrix({\n      origin: camera.position,\n      facing: camera.quaternion,\n    });\n  };\n\n  const onUpdate = ({ processCpuResult }) => {\n    camera.updateProjectionMatrix();\n\n    let data = processCpuResult.reality;\n    if (!(data && data.intrinsics)) return;\n\n    let { intrinsics, position, rotation } = data;\n    let { elements } = camera.projectionMatrix;\n\n    for (let i = 0; i < 16; i++) {\n      elements[i] = intrinsics[i];\n    }\n\n    camera.projectionMatrixInverse.getInverse(camera.projectionMatrix);\n    camera.setRotationFromQuaternion(rotation);\n    camera.position.copy(position);\n  };\n\n  const xrScene = () => {\n    return { scene, camera, renderer: gl };\n  };\n\n  return (\n    <group>\n      <mesh\n        onPointerDown={(e) => setTapTarget(e.intersections[0].point)}\n        receiveShadow\n        position={[0, 0, 0]}\n        ref={$surface}\n        rotation-x={-Math.PI / 2}\n      >\n        <planeGeometry attach=\"geometry\" args={[100, 100, 1, 1]} />\n        <shadowMaterial opacity={0.3} />\n      </mesh>\n      <group position={[0,.5,0]}>\n        <mesh\n          castShadow\n          position={tapTarget}\n          visible={!!tapTarget}\n          ref={$box}\n          userData={{ hello: \"yop\" }}\n        >\n          <boxGeometry args={[1, 1, 1]} />\n          <meshStandardMaterial color=\"blue\" />\n        </mesh>\n      </group>\n    </group>\n  );\n};\n\nexport default XR3F;\n","import * as THREE from 'three';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Canvas, useThree } from 'react-three-fiber';\n\nconst FullWindowCanvas = () => {\n\tconst {gl} = useThree();\n\n\tconst {\n\t    XR8,\n\t    THREE,\n\t} = window;\n\n\tconst vsize_ = {}\n  \tlet orientation_ = 0\n  \tlet mycanvas_ = gl.domElement\n  \tlet canvas_ \n\n  \tconst canvasStyle_ = {\n\t    position: 'static',\n\t    width: '100%',\n\t    height: '100%',\n\t    margin: '0px',\n\t    padding: '0px',\n\t    border: '0px',\n\t    display: 'block',\n\t    top: '0px',\n\t    left: '0px',\n  \t}\n\n\tconst mycanvasStyle_ = {\n\t    position: 'fixed',\n\t    width: '100%',\n\t    height: '100%',\n\t    margin: '0px',\n\t    padding: '0px',\n\t    border: '0px',\n\t    display: 'block',\n\t    top: '0px',\n\t    left: '0px'\n  \t}\n\n  \tconst bodyStyle_ = {\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\t\tmargin: '0px',\n\t\tpadding: '0px',\n\t\tborder: '0px',\n\t}\n\n\tconst fillScreenWithCanvas = () => {\n\t\tif (!canvas_) { return }\n\t\t// Get the pixels of the browser window.\n\t    const uww = window.innerWidth\n\t    const uwh = window.innerHeight\n\t    const ww = uww * devicePixelRatio\n\t    const wh = uwh * devicePixelRatio\n\n\t\t// Wait for orientation change to take effect before handline resize.\n\t\tif (((orientation_ === 0 || orientation_ === 180) && ww > wh) || ((orientation_ === 90 || orientation_ === -90) && wh > ww)) {\n\t\t\t\twindow.requestAnimationFrame(fillScreenWithCanvas)\n\t\t\t\treturn\n\t\t}\n\t\t\n\t\t// Compute the portrait-orientation aspect ratio of the browser window.\n\t    const ph = Math.max(ww, wh)\n\t    const pw = Math.min(ww, wh)\n\t    const pa = ph / pw\n\t    // Compute the portrait-orientation dimensions of the video.\n\t    const pvh = Math.max(vsize_.w, vsize_.h)\n\t    const pvw = Math.min(vsize_.w, vsize_.h)\n\t    // Compute the cropped dimensions of a video that fills the screen, assuming that width is\n\t    // cropped.\n\t    let ch = pvh\n\t    let cw = Math.round(pvh / pa)\n\t\t// Figure out if we should have cropped from the top, and if so, compute a new cropped video\n\t\t// dimension.\n\t\tif (cw > pvw) {\n\t\t\tcw = pvw\n\t\t\tch = Math.round(pvw * pa)\n\t\t}\n\t\t\n\t\t// If the video has more pixels than the screen, set the canvas size to the screen pixel\n\t\t// resolution.\n\t\tif (cw > pw || ch > ph) {\n\t\t\tcw = pw\n\t\t\tch = ph\n\t\t}\n\n\t\t// Switch back to a landscape aspect ratio if required.\n\t\tif (ww > wh) {\n\t\t\tlet tmp = cw\n\t\t\tcw = ch\n\t\t\tch = tmp\n\t\t}\n\n\t\t// Set the canvas geometry to the new window size.\n\t\tObject.assign(canvas_.style, canvasStyle_)\n\t\tcanvas_.width = cw\n\t\tcanvas_.height = ch\n\t\tObject.assign(mycanvas_.style, mycanvasStyle_)\n\t\tmycanvas_.width = cw\n\t\tmycanvas_.height = ch\n\n\t\t// on iOS, rotating from portrait to landscape back to portrait can lead to a situation where\n\t    // address bar is hidden and the content doesn't fill the screen. Scroll back up to the top in\n\t    // this case. In chrome this has no effect. We need to scroll to something that's not our\n\t    // scroll position, so scroll to 0 or 1 depending on the current position.\n\t    setTimeout(() => window.scrollTo(0, (window.scrollY + 1) % 2), 300)\n\t}\n\n\tconst updateVideoSize = ({videoWidth, videoHeight}) => {\n\t\tvsize_.w = videoWidth\n\t\tvsize_.h = videoHeight\n\t}\n\n\tuseEffect(() => {\n\t\tXR8.addCameraPipelineModule({\n\t\t\tname: 'fullwindow-canvas',\n\t\t\tonUpdate,\n\t\t\tonStart,\n\t\t\tonDeviceOrientationChange,\n\t\t\tonCanvasSizeChange,\n\t\t\tonVideoSizeChange,\n\t\t\tonCameraStatusChange\n\t\t});\n\t});\n\n\tconst onUpdate = () => {\n\t\tif (canvas_.style.width === canvasStyle_.width && canvas_.style.height === canvasStyle_.height) {\n  \t\t\treturn\n\t\t}\n\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onStart = ({canvas, orientation}) => {\n\n\t\tcanvas_ = canvas\n\t\torientation_ = orientation\n\t\tcanvas_.style = canvasStyle_\n\t\tmycanvas_.style = mycanvasStyle_\n\t\tconst body = document.getElementsByTagName('body')[0]\n\t\tObject.assign(body.style, bodyStyle_)\n\t\tbody.appendChild(canvas_)\n\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onVideoSizeChange = ({videoWidth, videoHeight}) => {\n\t\tupdateVideoSize({videoWidth, videoHeight})\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onCanvasSizeChange = () => {\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onDeviceOrientationChange = ({orientation}) => {\n\n\t\torientation_ = orientation\n\t\tfillScreenWithCanvas()\n\t}\n\n\tconst onCameraStatusChange = ({status, video}) => {\n\t\tif (status !== 'hasVideo') {\n  \t\t\treturn\n\t\t}\n\n\t\tupdateVideoSize(video)\n\t}\n\n\treturn (\n\t\t<>\n\t\t</>\n\t)\n} \n\nexport default FullWindowCanvas;","import {\n    shape,\n    func,\n    string,\n} from 'prop-types';\nimport styled from '@emotion/styled';\n\nimport React, { useEffect } from 'react';\nimport { Canvas, useThree } from 'react-three-fiber'\nimport ReactDOM from \"react-dom\";\nimport { withLauncher } from '../Component';\nimport { withContext } from './ContextProvider';\nimport useContext from './hooks/useContext';\nimport XR3F from './XR3F'\nimport FullWindowCanvas from './FullWindowCanvas'\n\nconst Component = ({ XR8, xr8Config, onComplete, backgroundImage, }) => {\n\tconst {\n        updateCtx,\n    } = useContext();\n\n    useEffect(() => { \n\n        if (XR8) {\n            updateCtx({ XR8 });\n        }\n    }, [XR8, updateCtx]);\n\n\n    return (\n    \t<Canvas concurrent={true} style={{ width:'100%', height:'100%', position:'absolute', left:'0px', top:'0px', zIndex:100  }} shadowMap updateDefaultCamera={false} camera={{position: [0, 0, 5], fov: 60 }}>\n          <ambientLight intensity={0.5} />\n          <spotLight\n            intensity={0.6}\n            position={[20, 10, 10]}\n            angle={0.2}\n            penumbra={1}\n            shadow-mapSize-width={1024}\n            shadow-mapSize-height={1024}\n            castShadow\n          />\n          <XR3F name={'xr-three'} updateCtx={updateCtx}>\n              \n          </XR3F>\n          <FullWindowCanvas/>\n        </Canvas>\n    )\n}\n\nexport default withContext(withLauncher(Component))","import {\n    string,\n    shape,\n    func,\n} from 'prop-types';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PortalModal from './elements/PortalModal';\nimport use8thWall from './hooks/use8thWall';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function withLauncher(Experience) {\n    function WrappedExperience({\n        appKey,\n        xr8Config,\n        updateCtx,\n        ...props\n    }) {\n        \n\n        // 8th wall loading\n        const cameraFeed = useRef(null);\n        \n        const XR8 = use8thWall(appKey, cameraFeed.current);\n\n        return (\n            <>\n                <PortalModal rootElement={document.body}>\n                    <canvas\n                        ref={cameraFeed}\n                    />\n                </PortalModal>\n                {XR8 && (\n                    <Experience\n                        XR8={XR8}\n                        xr8Config={xr8Config}\n                        {...props}\n                    />\n                )}\n            </>\n        );\n    }\n\n    WrappedExperience.propTypes = {\n        baseUrl: string.isRequired,\n        appKey: string.isRequired,\n        xr8Config: shape({}).isRequired,\n        onComplete: func.isRequired,\n        updateCtx: func,\n    };\n\n    WrappedExperience.defaultProps = {\n        updateCtx: undefined,\n    };\n\n    return (props) => <WrappedExperience {...props} />;\n}\n\n","import { useContext as useReactContext } from 'react';\nimport { Context } from '../ContextProvider';\n\nexport default function useContext() {\n    const context = useReactContext(Context);\n\n    if (!context) {\n        throw new Error('No proper appStateContext provided');\n    }\n    \n    return context;\n}\n","import ReactDOM from 'react-dom';\nimport React, { useState } from 'react';\nimport Component from './Experience';\n\nconst onComplete = (action, result) => {\n    console.log('onComplete has been triggered');\n    console.log('action =', action);\n    console.log('result =', result);\n    alert('Check your logs!');\n}\n\nconst ComponentWrapper = (componentProps) => {\n    \n   \tif (!componentProps) {\n        return null;\n    }\n\n    return (\n        <Component\n            {...componentProps}\n        />\n    );\n};\n\nconst initComponent = async () => {\n    const fetchData = await fetch('config.json');\n    const componentProps = await fetchData.json();\n\n    ReactDOM.render(\n        <ComponentWrapper\n            onComplete={onComplete}\n            {...componentProps}\n        />,\t\n        document.querySelector('#root'),\n    );\n};\n\ninitComponent();\n"],"sourceRoot":""}